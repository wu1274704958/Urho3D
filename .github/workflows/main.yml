#
# Copyright (c) 2008-2020 the Urho3D project.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

---

name: CI/CD
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
jobs:
  linux:
    name: üêß
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux-gcc
          - linux-clang
          - mingw
          - rpi
          - arm
        lib-type:
          - STATIC
          - SHARED
        architecture:
          - 64bit
          - 32bit
        include:
          - { platform: android, lib-type: STATIC }
          - { platform: android, lib-type: SHARED }
          - { platform: web, lib-type: STATIC }
    env:
      HOST: ${{ github.job }}
      PLATFORM: ${{ matrix.platform }}
      LIB_TYPE: ${{ matrix.lib-type }}
      ARCH: ${{ matrix.architecture }}
      DBE_TAG: latest
    steps:
      - name: Unshallow
        run: echo '::set-env name=FETCH_DEPTH::0'
        if: startsWith(github.ref, 'refs/tags/')
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Free up space
        run: sudo rm -rf /usr/share/dotnet /usr/local/lib/android
        if: matrix.platform == 'android'
      - name: Source checksum
        id: source_checksum
        run: rake source_checksum
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            build/cache/.ccache
            build/cache/.gradle/caches
            build/cache/.gradle/wrapper
          key: |
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ env.DBE_TAG }}-${{ steps.source_checksum.outputs.hexdigest }}
          restore-keys: |
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ env.DBE_TAG }}
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}
      - name: DBE
        run: script/dockerized.sh ${PLATFORM/-*} env
      - name: CMake
        run: |
          docker volume create $(id -u).urho3d_home_dir >/dev/null
          sudo rm -rf /var/lib/docker/volumes/$(id -u).urho3d_home_dir/_data
          mkdir -p build/cache
          sudo ln -s $(pwd)/build/cache /var/lib/docker/volumes/$(id -u).urho3d_home_dir/_data
          script/dockerized.sh ${PLATFORM/-*} rake ci cmake
      - name: Build
        run: script/dockerized.sh ${PLATFORM/-*} rake ci build
      - name: Test
        run: script/dockerized.sh ${PLATFORM/-*} rake ci test
        if: startsWith(matrix.platform, 'linux')
  macOS:
    name: üçè
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macOS-xcode
          # macOS-make
        lib-type:
          - STATIC
          - SHARED
        include:
          - { platform: iOS, lib-type: STATIC }
          - { platform: tvOS, lib-type: STATIC }
    env:
      HOST: ${{ github.job }}
      PLATFORM: ${{ matrix.platform }}
      LIB_TYPE: ${{ matrix.lib-type }}
    steps:
      - name: Unshallow
        run: echo '::set-env name=FETCH_DEPTH::0'
        if: startsWith(github.ref, 'refs/tags/')
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: CMake
        run: rake ci cmake
      - name: Build
        run: rake ci build
      - name: Test
        run: rake ci test
        if: startsWith(matrix.platform, 'macOS')
  windows:
    name: üî≤
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - win-vs
          - win-gcc
        lib-type:
          - STATIC
          - SHARED
        graphics-api:
          - DX11
          - DX9
          - OpenGL
    env:
      HOST: ${{ github.job }}
      PLATFORM: ${{ matrix.platform }}
      LIB_TYPE: ${{ matrix.lib-type }}
      GRAPHICS_API: ${{ matrix.graphics-api }}
    steps:
      - name: Unshallow
        run: echo '::set-env name=FETCH_DEPTH::0'
        if: startsWith(github.ref, 'refs/tags/')
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: CMake
        run: rake ci cmake
      - name: Build
        run: rake ci build
      - name: Test
        run: rake ci test
        if: matrix.graphics-api != 'OpenGL'

...

# vi: set ts=2 sw=2 expandtab:
